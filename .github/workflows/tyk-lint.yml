name: Lint Tyk APIs

on:
  pull_request:
    paths:
    - 'infrastructure/staging/tyk/**'
    - 'infrastructure/production/tyk/**'
  workflow_dispatch:
    inputs:
      environment: 
        type: choice
        options:
        - staging
        - production
  workflow_call:
    inputs:
      environment:
        type: string

jobs:
  tyk-lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: read
      checks: write
    steps:
    - 
        name: Checkout
        uses: actions/checkout@v4
    - 
        name: Determine Environment
        id: determine_environment
        run: |
          if [[ "${{ github.event_name }}" == "workflow_call" ]]; then
            # Workflow called with an input
            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Workflow called with an input
            echo "environment=${{ inputs.environment }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
            # Determine which directory to process based on modified files
            MODIFIED_FILES=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }})
            if echo "$MODIFIED_FILES" | grep -q '^staging/'; then
              echo "environment=staging" >> $GITHUB_OUTPUT
            elif echo "$MODIFIED_FILES" | grep -q '^production/'; then
              echo "environment=production" >> $GITHUB_OUTPUT
            else
              echo "Error: No relevant files modified in the pull request." >&2
              exit 1
            fi
          fi
    -
        name: Lint api definitions
        uses: stoplightio/spectral-action@latest
        with:
            file_glob: infrastructure/${{ steps.determine_environment.outputs.environment }}/tyk/apis/api-*.json
            spectral_ruleset: infrastructure/${{ steps.determine_environment.outputs.environment }}/tyk/tykapi-ruleset.yaml
        continue-on-error: true
    -
        name: Extract OAS
        run: |
            #!/bin/bash

            cd infrastructure/${{ steps.determine_environment.outputs.environment }}/tyk/apis

            for file in oas-*.json; do
                if [ -f "$file" ]; then
                    jq '.oas' "$file" > "${file}.tmp" && mv "${file}.tmp" "$file"
                    echo "finished processing $file"
                fi
            done

            echo "done"
    -
        name: Lint oas api definitions
        uses: stoplightio/spectral-action@latest
        with:
            file_glob: infrastructure/${{ steps.determine_environment.outputs.environment }}/tyk/apis/oas-*.json
            spectral_ruleset: infrastructure/${{ steps.determine_environment.outputs.environment }}/tyk/tykoas-ruleset.yaml
        continue-on-error: true