name: Tyk Sync (production)

on:
  workflow_dispatch:

permissions:
  contents: write # Grants write permission to modify files in the repository

jobs:
  sync-production:
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Copy files from staging to production
      run: |
        cp -r ./infrastructure/staging/tyk/* ./infrastructure/production/tyk/

    - name: Commit and Push Changes
      run: |
        # Configure Git
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

        # Add changes
        git add ./infrastructure/production/tyk/

        # Check if there are changes to commit
        if git diff --cached --quiet; then
          echo "No changes to commit."
        else
          # Commit changes
          git commit -m "Copy files from staging to production"
        
          # Push changes
          git push
        fi

    - name: Create .tyk.json
      run: |
        echo '{' > .tyk.json
        echo '  "type": "apidef",' >> .tyk.json
        echo '  "files": [' >> .tyk.json
        find . -type f -name '*.json' -path './infrastructure/production/tyk/apis/*' -exec echo '    {"file": "{}"},' \; | sed '$ s/,$//' >> .tyk.json
        echo '  ],' >> .tyk.json
        echo '  "policies": [' >> .tyk.json
        find . -type f -name '*.json' -path './infrastructure/production/tyk/policies/*' -exec echo '    {"file": "{}"},' \; | sed '$ s/,$//' >> .tyk.json
        echo '  ],' >> .tyk.json
        echo '  "assets": [' >> .tyk.json
        find . -type f -name '*.json' -path './infrastructure/production/tyk/assets/*' -exec echo '    {"file": "{}"},' \; | sed '$ s/,$//' >> .tyk.json
        echo '  ]' >> .tyk.json
        echo '}' >> .tyk.json
        cat .tyk.json

    - name: Sync with Tyk
      run: |
        echo 'Sync config to ${TYK_DASHBOARD_URL}'
        docker run -v ${{ github.workspace }}:/app/data ${TYK_SYNC_REPO}:${TYK_SYNC_VERSION} sync --path /app/data --dashboard ${TYK_DASHBOARD_URL} --secret ${TYK_DASHBOARD_SECRET}
      env:
        TYK_SYNC_REPO: ${{ vars.TYK_SYNC_REPO }}
        TYK_SYNC_VERSION: ${{ vars.TYK_SYNC_VERSION }}
        TYK_DASHBOARD_URL: ${{ vars.TYK_DASHBOARD_URL }}
        TYK_DASHBOARD_SECRET: ${{ secrets.TYK_DASHBOARD_SECRET }}